
#================
#=== Timer
#================
timer:

  kitchen_heater:
    name: kitchen_heater
    icon: mdi:timer-sand



#==================
#=== Input  Boolean
#==================

input_boolean:
  kitchen_heater:
    name: kitchen_heater
#==================
#=== Counter
#==================
counter:

  kitchen_heater:
    name: kitchen_heater
    minimum: 24
    maximum: 37
    step: 1



#================
#=== Automations
#================
automation:

######################## kitchen_heater_base #################
    - id: kitchen_heater_base
      alias: kitchen_heater_base
      description: ''
      trigger:
      - platform: template
        value_template: ' {{ (states.counter.kitchen_heater.state|int) <= (states.sensor.disk_use_percent_home.state|int)
          }}'
      - platform: state
        entity_id: timer.kitchen_heater
        to: active
      - platform: state
        entity_id: input_boolean.kitchen_heater
        to: 'on'
      - platform: state
        entity_id: input_boolean.kitchen_heater
        to: 'off'
      - platform: state
        entity_id: timer.kitchen_heater
        to: idle
      - platform: template
        value_template: ' {{ (states.counter.kitchen_heater.state|int) > (states.sensor.disk_use_percent_home.state|int)
          }}'
      condition: []
      action:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ ( not ((states.counter.kitchen_heater.state|int) <= (states.sensor.disk_use_percent_home.state|int))
              and ((is_state("input_boolean.kitchen_heater", "on")) or (is_state("timer.kitchen_heater",
              "active")))) or (((states.counter.kitchen_heater.state|int) <=(states.sensor.disk_use_percent_home.state|int))
              and ( not (is_state("input_boolean.kitchen_heater", "on"))) and((is_state("timer.kitchen_heater",
              "active"))) ) }}      '
          sequence:
          - service: light.turn_on
            target:
              entity_id: switch.kitchen_heater
        - conditions:
          - condition: template
            value_template: '{{ ( not( not ((states.counter.kitchen_heater.state|int) <= (states.sensor.disk_use_percent_home.state|int))
              and ((is_state("input_boolean.kitchen_heater", "on")) or (is_state("timer.kitchen_heater",
              "active")))) or (((states.counter.kitchen_heater.state|int) <= (states.sensor.disk_use_percent_home.state|int))
              and ( not (is_state("input_boolean.kitchen_heater", "on"))) and((is_state("timer.kitchen_heater",
              "active"))) )) }} '
          sequence:

          - service: light.turn_off
            target:
              entity_id: switch.kitchen_heater
        default:

        - service: light.turn_off
          target:
            entity_id: switch.kitchen_heater
      mode: single


############################ toggle_switch ######################
    - id: kitchen_heater_toggle_switch
      alias: kitchen_heater_toggle_switch
      trigger:
      - platform: state
        entity_id: input_boolean.kitchen_heater
        to: 'on'
        id: '1'
      - platform: state
        entity_id: timer.kitchen_heater
        to: idle
        id: '2'
      condition: []
      action:
      - choose:
        - conditions:
          - condition: trigger
            id: '2'
          sequence:
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
          - service: input_boolean.turn_off
            target:
              entity_id: input_boolean.kitchen_heater
        - conditions:
          - condition: trigger
            id: '1'
          sequence:
          - service: timer.start
            data:
              duration: 00:60:00
            target:
              entity_id: timer.kitchen_heater
        default:
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.kitchen_heater
      mode: single

